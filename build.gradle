plugins {
    id "fabric-loom" version "1.4-SNAPSHOT"
    id "maven-publish"
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url = "https://dl.bintray.com/user11681/maven"
    }
    maven {
        name = 'legacy-fabric'
        url = 'https://maven.legacyfabric.net'
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        name 'HalfOf2'
        url 'https://storage.googleapis.com/devan-maven/'
    }
    mavenLocal {
        url = 'mvn'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "btw.community:mappings:1.0.3"

    modImplementation fileTree(dir: "libs", include: "**.jar")
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    implementation "net.fabricmc:fabric-loader:${project.loader_version}"
    implementation 'net.fabricmc:fabric-loom:1.4-SNAPSHOT'

    //implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    //implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    compileOnly("com.google.code.findbugs:jsr305:+")
    compileOnly("org.jetbrains:annotations:+")

    testImplementation("org.junit.jupiter:junit-jupiter:+")

    implementation("org.ow2.asm:asm:9.7")
    implementation("org.ow2.asm:asm-commons:9.7")
    implementation("org.ow2.asm:asm-analysis:9.7")
    implementation("org.ow2.asm:asm-tree:9.7")
    implementation("org.ow2.asm:asm-util:9.7")

    // concern
    // extraLibs files("${System.getProperty('java.home')}/../lib/tools.jar")

    implementation(include("net.bytebuddy:byte-buddy-agent:+"))
//    implementation(include("net.java.dev.jna:jna:5.3.1"))
//    implementation(include("net.java.dev.jna:jna-platform:5.3.1"))

    include(implementation("net.auoeke:reflect:6.+"))
    include(implementation("net.auoeke:unsafe:latest.release"))
}

compileJava {
    options.compilerArgs.addAll([
            "--add-exports", "java.base/jdk.internal.reflect=ALL-UNNAMED"
    ])
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")

    from(sourceSets.main.allSource)
}

jar {
    from("LICENSE")

    manifest {
        attributes(
                "Manifest-Version": "1.0",
                "Agent-Class": "net.devtech.grossfabrichacks.instrumentation.InstrumentationAgent",
                "Can-Retransform-Classes": "true"
        )
    }
}

loom {
    setIntermediaryUrl('https://maven.legacyfabric.net/net/legacyfabric/intermediary/%1$s/intermediary-%1$s-v2.jar');
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }
    // select the repositories you want to publish to
    repositories {
        File gh = new File(projectDir.parentFile.parentFile, "util/Devan-Repo")
        System.out.println(gh)
        if (gh.exists()) {
            maven {
                url = gh.absolutePath
            }
        }
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
